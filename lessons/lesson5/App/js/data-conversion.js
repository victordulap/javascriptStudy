/*  Преобразования данных
========================================
Нередко возникает необходимость преобразовать одни данные в другие. 

Например:
*/
var numb1 = "46";
var numb2 = "4";
var strNumCon = " - String to Number Conversion";
var result = numb1 + numb2;
console.log(result + strNumCon); //464

/*
Обе переменных представляют строки, а точнее строковые представления чисел. И в итоге мы получим не число 50, а строку 464. Но было бы неплохо, если бы их тоже можно было бы складывать, вычитать, в общем работать как с обычными числами.

В этом случае мы можем использовать операции преобразования. Для преобразования строки в число применяется функция parseInt():
--------------------------------------*/
var numb1 = "46";
var numb2 = "4";
var result = parseInt(numb1) + parseInt(numb2);

var numFunc1;
numFunc1 = " - parseInt()";
console.log(result + numFunc1); // 50

/*
Для преобразования строк в дробные числа применяется функция parseFloat():
--------------------------------------*/
var numb1 = "46.07";
var numb2 = "4.98";
var result = parseFloat(numb1) + parseFloat(numb2);

var numFunc2;
numFunc2 =" - parseFloat()";
console.log(result + numFunc2); //51.05

/*
При этом строка может иметь смешанное содержимое, например, "123hello", то есть в данном случае есть цифры, но есть и обычные символы. Но метод parseInt() все равно попытается выполнить преобразование:
--------------------------------------*/
var num1 = "123hello";
var num2 = parseInt(num1);
console.log(num2 + numFunc1); // 123

/*
Если методу не удастся выполнить преобразование, то он возвращает значение NaN (Not a Number), которое говорит о том, что строка не представляет число и не может быть преобразована.

С помощью специальной функции isNaN() можно проверить, представляет ли строка число. Если строка не является числом, то функция возвращает true, если это число - то false.
--------------------------------------*/
var num1 = "javascript";
var num2 = "22";
var nNum = " // num1 не является числом";
var yNum = "  // num2 - является числом";
var result = isNaN(num1);
console.log(result + nNum); // true - num1 не является числом
     
result = isNaN(num2);
console.log(result + yNum); // false - num2 - это число

/*
Выше мы рассматривали перевод строк в числа в десятичной системе. Однако мы можем переводить числа в любую систему. По умолчанию интерпретатор JavaScript сам отгадывает, в число из какой системы исчисления мы хотим преобразовать строку (как правило, выбирается десятичная система). Но мы можем с помощью второго параметра явно указать, что хотим преобразовать строку в число в определенной системе. Например, преобразование в число в двоичной системе:
--------------------------------------*/
var num1 = "110";
var num2 = parseInt(num1, 2);
console.log(num2); // 6

/*
Результатом будет 6, так как 110 в двоичной системе - это число 6 в десятичной.

Теперь напишем небольшую программу, в которой используем операции с переменными:
-------------------------------------*/
var strSum = prompt("Введите сумму вклада", 1000);
    var strPercent = prompt("Введите процентную ставку", 10);
//    var sum = parseInt(strSum);
//    var percent = parseInt(strPercent);
//    sum = sum + sum * percent / 100;
//    alert("После начисления процентов сумма вклада составит: " + sum);

var sum = parseInt(strSum) + parseInt(strSum) * parseInt(strPercent) / 100;
alert("После начисления процентов сумма вклада составит: " + sum);

/*
С помощью функции prompt() в браузере выводится диалоговое окно с предложением ввести некоторое значение. Второй аргумент в этой функции указывает на значение, которое будет использоваться по умолчанию.

Однако функция prompt() возвращает строку. Поэтому эту строку нам надо преобразовать в число, чтобы выполнить с ней операции.
-----------------------------------------*/

